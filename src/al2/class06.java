// 大数据题目的解题技巧
// 1)哈希函数可以把数据按照种类均匀分流
// 2)布隆过滤器用于集合的建立与查询，并可以节省大量空间
// 3)一致性哈希解决数据服务器的负载管理问题
// 4)利用并查集结构做岛问题的并行计算
// 5)位图解决某一范围上数字的出现情况，并可以节省大量空间
// 6)利用分段统计思想、并进一步节省大量空间
// 7)利用堆、外排序来做多个处理单元的结果合并

package al2;

public class class06 {
    public static void main(String[] args){

    }


    // 1)哈希函数可以把数据按照种类均匀分流
    // 2)布隆过滤器用于集合的建立与查询，并可以节省大量空间
    // 3)一致性哈希解决数据服务器的负载管理问题
    // 4)利用并查集结构做岛问题的并行计算
    // 5)位图解决某一范围上数字的出现情况，并可以节省大量空间
    // 6)利用分段统计思想、并进一步节省大量空间
    // 7)利用堆、外排序来做多个处理单元的结果合并


    // 1. 32位无符号整数的范围是0~4,294,967,295，现在有一个正好包含40亿个无符号整数的文
    // 件，所以在整个范围中必然存在没出现过的数。可以使用最多1GB的内存，怎么找到所有
    // 未出现过的数？
    // 解： bit数组：申请2^32/8字节 ≈ 500MB的内存空间用来统计0 ~ 2^32-1 范围每一个数是否出现
    // 【进阶】内存限制为10MB,但是只用找到一个没出现过的数即可
    // 解： 根据内存大小划分桶                  10 * 1024 / 4 = 2^11, 可申请int[] ct = int[2^11]，
    //     统计每个桶的数据个数                 将无符号整型数分成2^11份，统计每一份的数量
    //     找出一个不满的桶，继续划分周而复始   若ct[i] < 2^32 / 2^11,说明第i个桶对应的范围上由未出现的数
    // 【进阶】只允许使用优先几个变量,但是只用找到一个没出现过的数即可
    // 解：二分


    // 2.有一个包含100亿个URL的大文件，假设每个URL占用64B,请找出其中所有重复的URL
    // 【补充】某搜索公司一天的用户搜索词汇是海量的（百亿数据量），请设计一种求出每天热门Top100词汇的可行办法
    // 解：利用堆、外排序来做多个处理单元的结果合并
    // 1）哈希分流成小文件
    // 2）每个小文件统计词频，建立大根堆
    // 3）以所有大根堆的堆顶建立总大根堆
    // 4）每次从总堆中弹出最大值，然后将弹出值所在小堆的堆顶弹出，将这个堆的新堆顶加入到总堆里
    // 5）循环直到得到想要的结果


    // 3. 32位无符号整数的范围是0~4294967295，现在有40亿个无符号整数，可以使用最多1GB的内存，找出所有出现了两次的数。
    // 解：位图，每2位表示一个数出现次数情况：00-0次，01-1次，10-2次，11-2+次；
    //     使用内存 = 2 * 2^32/8 = 2^30 B = 1 GB
    // >>如果只能使用较小内存空间：哈希分流统计个数再汇总结果


    // 4. 可以使用最多10MB的内存，怎么找到这40亿个整数的中位数？
    // 解：二（多）分，


}
